<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAGmKAABpigAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMzMzADMz
        M08zMzP7MzMz/zMzM2wzMzMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAzMzMAMzMzTzMzM/szMzP/MzMzbDMzMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAzMzMAMzMzADMzMwAzMzNOMzMz+zMzM/8zMzNrMzMzADMzMwAzMzMAMzMzAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMz
        MwAzMzMAMzMzADMzMwAzMzMAMzMzBTMzM14zMzP8MzMz/zMzM3gzMzMHMzMzADMzMwAzMzMAMzMzADMz
        MwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAzMzMAMzMzADMzMwAzMzMHMzMzPTMzM4AzMzO8MzMz4jMzM/8zMzP/MzMz5zMzM8AzMzOIMzMzRDMz
        MwszMzMAMzMzADMzMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAMzMzADMzMwAzMzMAMzMzOTMzM6YzMzPyMzMz/zMzM/8zMzP8MzMz6TMzM+wzMzP+MzMz/zMz
        M/8zMzP2MzMzsTMzM0MzMzMCMzMzADMzMwAzMzMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADMzMwAzMzMAMzMzBTMzM2kzMzPoMzMz/zMzM+wzMzOrMzMzezMzM08zMzMrMzMzLzMz
        M1UzMzOCMzMzszMzM/MzMzP/MzMz7zMzM3kzMzMKMzMzADMzMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAzMzMAMzMzADMzMwQzMzN/MzMz+DMzM/8zMzPDMzMzQzMzMwMzMzMAMzMzADMz
        MwAzMzMAMzMzADMzMwAzMzMGMzMzUjMzM9AzMzP/MzMz/DMzM5IzMzMKMzMzADMzMwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAMzMzADMzMwAzMzMAMzMzZTMzM/czMzP3MzMzizMzMxczMzMAMzMzADMz
        MwAzMzMAAAAAAAAAAAAzMzMAMzMzADMzMwAzMzMAMzMzIDMzM5ozMzP7MzMz/DMzM3kzMzMCMzMzADMz
        MwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzMzMAMzMzADMzMzIzMzPkMzMz/zMzM5AzMzMEMzMzADMz
        MwAzMzMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMzMzADMzMwAzMzMAMzMzCTMzM6EzMzP/MzMz7zMz
        M0MzMzMAMzMzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMzMwAzMzMEMzMznDMzM/8zMzPMMzMzHDMz
        MwAzMzMAMzMzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMzMzADMzMwAzMzMAMzMzJTMz
        M9YzMzP/MzMzsTMzMwszMzMAMzMzAAAAAAAAAAAAAAAAAAAAAAAzMzMAMzMzADMzMzEzMzPsMzMz9DMz
        M1AzMzMAMzMzADMzMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMzMzADMz
        MwAzMzMAMzMzWjMzM/YzMzP2MzMzRDMzMwAzMzMAAAAAAAAAAAAAAAAAAAAAADMzMwAzMzMAMzMzcDMz
        M/8zMzO9MzMzCTMzMwAzMzMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAMzMzADMzMwAzMzMNMzMzxTMzM/8zMzOIMzMzADMzMwAAAAAAAAAAADMzMwAzMzMAMzMzADMz
        MwAzMzOrMzMz/zMzM5EzMzMAMzMzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAMzMzADMzMwAzMzOaMzMz/zMzM8AzMzMHMzMzADMzMwAzMzMAMzMzbDMz
        M2wzMzNsMzMzcjMzM9wzMzP/MzMzZDMzMwAzMzMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzMzMAMzMzADMzM2wzMzP/MzMz5zMzM3gzMzNrMzMzbDMz
        M2wzMzP/MzMz/zMzM/8zMzP/MzMz/zMzM/QzMzM9MzMzADMzMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMzMwAzMzMAMzMzQjMzM/YzMzP/MzMz/zMz
        M/8zMzP/MzMz/zMzM/szMzP7MzMz+zMzM/wzMzP/MzMz8TMzMzYzMzMAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMzMwAzMzM7MzMz8zMz
        M/8zMzP8MzMz+zMzM/szMzP7MzMzTzMzM08zMzNPMzMzWDMzM9gzMzP8MzMzSTMzMwAzMzMAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzMzMAMzMzADMz
        M08zMzP9MzMz5DMzM18zMzNOMzMzTzMzM08zMzMAMzMzADMzMwAzMzMAMzMzpzMzM/8zMzN1MzMzADMz
        MwAzMzMAMzMzADMzMwAzMzMAMzMzAAAAAAAAAAAAAAAAAAAAAAAzMzMAMzMzADMzMwAzMzMAMzMzADMz
        MwAzMzMAMzMzezMzM/8zMzO8MzMzBTMzMwAzMzMAMzMzAAAAAAAAAAAAMzMzADMzMwAzMzNvMzMz/zMz
        M7ozMzMJMzMzADMzMwAzMzMJMzMzBzMzMwAzMzMAMzMzADMzMwAzMzMAMzMzADMzMwAzMzMAMzMzBTMz
        MwozMzMAMzMzADMzMwszMzO/MzMz/zMzM4YzMzMAMzMzAAAAAAAAAAAAAAAAAAAAAAAzMzMAMzMzADMz
        MyozMzPmMzMz9DMzM0kzMzMAMzMzADMzMyIzMzORMzMzRjMzMwczMzMAMzMzADMzMwAzMzMAMzMzBDMz
        MzwzMzORMzMzLzMzMwAzMzMAMzMzTjMzM/UzMzPxMzMzOzMzMwAzMzMAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAzMzMAMzMzAjMzM5MzMzP/MzMzvTMzMxMzMzMAMzMzAzMzM58zMzP2MzMzqjMzM0QzMzMHMzMzBDMz
        MzszMzOgMzMz8TMzM7QzMzMJMzMzADMzMxUzMzPBMzMz/zMzM6YzMzMHMzMzADMzMwAAAAAAAAAAAAAA
        AAAAAAAAAAAAADMzMwAzMzMAMzMzKDMzM9ozMzP/MzMzlDMzMwozMzMAMzMzPzMzM/IzMzP/MzMz8jMz
        M6szMzOjMzMz7TMzM/8zMzP6MzMzVDMzMwAzMzMLMzMzmTMzM/8zMzPkMzMzNTMzMwAzMzMAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAMzMzADMzMwAzMzMAMzMzVjMzM/EzMzP9MzMzYTMzMwAzMzMIMzMzsTMz
        M/8zMzP/MzMz/zMzM/8zMzP/MzMz/zMzM8UzMzMRMzMzADMzM2czMzP+MzMz9jMzM2UzMzMAMzMzADMz
        MwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMzMzADMzMwAzMzMBMzMzaTMzM/UzMzPBMzMzDTMz
        MwAzMzNVMzMz+TMzM/8zMzP/MzMz/zMzM/8zMzP+MzMzazMzMwAzMzMPMzMzxjMzM/gzMzN0MzMzBDMz
        MwAzMzMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMzMzADMzMwAzMzMCMzMzWjMz
        M9MzMzNLMzMzADMzMxEzMzPGMzMz/zMzM/8zMzP/MzMz/zMzM9czMzMdMzMzADMzM1AzMzPXMzMzXzMz
        MwMzMzMAMzMzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMzMzADMz
        MwAzMzMAMzMzLzMzM0czMzMBMzMzADMzM2szMzP+MzMz/zMzM/8zMzP/MzMzgjMzMwAzMzMBMzMzSjMz
        MzAzMzMAMzMzADMzMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAMzMzADMzMwAzMzMAMzMzADMzMwAzMzMAMzMzHTMzM9czMzP/MzMz/zMzM+UzMzMsMzMzADMz
        MwAzMzMAMzMzADMzMwAzMzMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAMzMzADMzMwAzMzMAMzMzADMzMwAzMzMAMzMzgzMzM/8zMzP/MzMzmjMz
        MwIzMzMAMzMzADMzMwAzMzMAMzMzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMzMzADMzMwAzMzMtMzMz5zMz
        M/IzMzM/MzMzADMzMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzMzMAMzMzADMz
        MwIzMzOdMzMzszMzMwgzMzMAMzMzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAzMzMAMzMzADMzM0IzMzNQMzMzADMzMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//gf///4H///4AP//wAA//4AAH/8AAAf+AAAH/AAAA/gAYAH4AfgB+AP
        8APAH/gDwD/8AwB//gAAf/4AAH/+AAD//wAAf/4AAAPAAMAAAAPAAAAD4AAAA+AAAAfgAAAH8AAAD/gA
        AB/8AAA//gAAf/8AAP//8A////AP///4H/8=
</value>
  </data>
</root>